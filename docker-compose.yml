version: '2.1'
services:
  auth_service:
    image: auth_service
    container_name: auth_service
    hostname: "patient-server"
    build:
      context: auth_service
      dockerfile: Dockerfile
    restart: always
    ports:
      - ${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}
    environment:
      MONGO_DB_URI: mongodb://root:pass@mongo:27017
      AUTH_DB_HOST: ${AUTH_DB_HOST}
      AUTH_DB_PORT: ${AUTH_DB_PORT}
      AUTH_SERVICE_PORT: ${AUTH_SERVICE_PORT}

    depends_on:
      - mongo
    networks:
      - network

  mongo:
    image: mongo
    container_name: mongo
    restart: on-failure
    networks:
      - network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pass
      MONGO_INITDB_DATABASE: mongodb
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
      interval: 10s
      timeout: 10s
      retries: 10

  cassandra:
    image: cassandra:4.0
    ports:
      - "7000:7000"
      - "9042:9042"
      #- "7199:7199" # JMX
      #- "7000:7000" # cluster communication
      #- "7001:7001" # cluster communication (SSL)
      #- "9042:9042" # native protocol clients
      #- "9160:9160" # thrift clients
    volumes:
      - ~/apps/cassandra:/var/lib/cassandra
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(nodetool statusgossip) = running ]" ]
      interval: 30s
      timeout: 10s
      retries: 5
  app:
    build: tweet_service
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      cassandra:
        condition: service_healthy
    environment:
      - DBPORT=9042
      - DB=cassandra
volumes:
  cassandra:

networks:
  network:
    driver: bridge




